{"ast":null,"code":"import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/login');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error)));\n  };\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => {\n      dispatch(success(id));\n    }, error => {\n      dispatch(failure(id, error));\n    });\n  };\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","dispatch","request","then","user","success","push","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"sources":["/home/rahulbaghel/Downloads/react-redux-registration-login-example/src/_actions/user.actions.js"],"sourcesContent":["import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => { \n                    dispatch(success(id));\n                },\n                error => {\n                    dispatch(failure(id, error));\n                }\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}